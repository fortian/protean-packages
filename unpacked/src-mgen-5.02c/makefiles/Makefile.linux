#
# Linux Protean Makefile definitions
#

# 1) System specific additional libraries, include paths, etc
#    (Where to find X11 libraries, etc)
#
SYSTEM_INCLUDES = -I/usr/X11R6/include 
SYSTEM_LDFLAGS = -L/usr/X11R6/lib -Wl,--as-needed
SYSTEM_LIBS = -ldl -lpthread -lpcap

# 2) System specific capabilities
# Must choose appropriate for the following:
#
# A) -DHAVE_CUSERID (preferred) or -DHAVE_GETLOGIN for cuserid() or getlogin()
#     functions to obtain user's login name (We may change this to getpwd() 
#     if that is better across different platforms and login environments)
#
# B) -DHAVE_LOCKF (preferred) or -DHAVE_FLOCK for lockf() or flock() file locking
#     functions to attempt exclusive lock on writing to files
# 
# C) Specify -DHAVE_DIRFD if your system provides the "dirfd()" function
#    (Most don't have it defined ... but some do)
#
# D) Optionally specify -DHAVE_ASSERT if your system has a built-in ASSERT()
#    routine.
#
# E) Some systems (SOLARIS/SUNOS) have a few gotchas which require
#    some #ifdefs to avoid compiler warnings ... so you might need
#    to specify -DSOLARIS or -DSUNOS depending on your OS.
#
# F) Uncomment this if you have the NRL IPv6+IPsec software
#DNETSEC = -DNETSEC -I/usr/inet6/include
#
# (We export these for other Makefiles as needed)
#

SYSTEM_HAVES = -DLINUX -DHAVE_SCHED -DHAVE_GETLOGIN -DHAVE_LOCKF -DHAVE_DIRFD -DHAVE_ASSERT $(NETSEC) -D_FILE_OFFSET_BITS=64 -DUNIX -DUSE_SELECT -DUSE_TIMERFD -DHAVE_PSELECT -DHAVE_IPV6

SYSTEM = linux
CC = g++
RANLIB = ranlib
AR = ar

include Makefile.common

RPMBUILD = $(abspath ../../../rpmbuild)
RPMBDIRS = $(RPMBUILD)/BUILD $(RPMBUILD)/BUILDROOT $(RPMBUILD)/RPMS $(RPMBUILD)/SOURCES $(RPMBUILD)/SPECS $(RPMBUILD)/SRPMS
TARGZ = $(RPMBUILD)/SOURCES/src-mgen-$(VERSION).tgz
PATCHES = $(wildcard *.patch)
RPMPATCH = $(foreach p,$(PATCHES),$(RPMBUILD)/SOURCES/$(p))
SPECS = $(RPMBUILD)/SPECS/mgen.spec $(RPMBUILD)/SPECS/mgen-python.spec

$(RPMBUILD):
	mkdir -p $@

$(RPMBDIRS): $(RPMBUILD)
	mkdir -p $@

$(SPECS): mgen.spec mgen-python.spec $(RPMBUILD)/SPECS
	sed "s,@TOPDIR@,$(RPMBUILD),g;s,@VERSION@,$(VERSION),g" < mgen.spec > $(RPMBUILD)/SPECS/mgen.spec
	sed "s,@TOPDIR@,$(RPMBUILD),g;s,@VERSION@,$(VERSION),g" < mgen-python.spec > $(RPMBUILD)/SPECS/mgen-python.spec

# Pack up this source in preparation for making the tarball - if we can't find one already
$(TARGZ):
	tar czf $@ -C ../.. "src-mgen-$(VERSION)"

$(RPMPATCH): $@
	cp $(notdir $@) $(RPMBUILD)/SOURCES/

.PHONY: rpm deb

rpm: $(RPMBDIRS) $(SPECS) $(TARGZ) $(RPMPATCH)
	cd "$(RPMBUILD)/SPECS" && rpmbuild -ba mgen.spec mgen-python.spec

RELEASE = $(shell lsb_release -s -c)

../debian/changelog: changelog
	sed "s,@VERSION@,$(VERSION),g;s,@RELEASE@,$(RELEASE),g" < changelog > "$@"

deb: ../debian/changelog $(wildcard ../debian/patches/*) $(SRCTGZ)
	cd .. && debuild -i -us -uc -b
