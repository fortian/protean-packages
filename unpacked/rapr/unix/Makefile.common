##########################################################################
# COMMON RAPR MAKEFILE STUFF
#

SHELL=/bin/sh

.SUFFIXES: .cpp -sim.o $(.SUFFIXES)

COMMON 		= ../common
UNIX 		= ../unix
PROTOLIB 	= ../../mgen/protolib
MGEN_COMMON     = ../../mgen/common
MGEN_BUILD      = ../../mgen/unix

SPRNG_DIR	= /home/ljt-bin/sprng2.0
SPRNG_INC	= $(SPRNG_DIR)/include
SPRNG_LIB	= $(SPRNG_DIR)/lib

STLPORT_INC     = /home/ljt-bin/STLport/stlport
STLPORT_LIB     = /home/ljt-bin/STLport/lib

# Optional build for PROCESSOR and PROC Threading routines 
# and libraries.
# PROC_THREADS is for any threading code, actually
#
# CODEC_FLAGS	= -DPROC_THREADS
# CODEC_DIR	= ../../thirdparty/dirac_codec
# CODEC_INC	= -I$(CODEC_DIR)/include/dirac
# CODEC_LIB	= $(CODEC_DIR)/lib/libdirac_encoder.a 


# find APIs and libaries
TINCLUDE 	= -I$(STLPORT_INC) -I$(SPRNG_INC) $(CODEC_INC) $(CODEC_FLAGS) 
TLIB 		= -L$(STLPORT_LIB) -lstlport -L$(SPRNG_LIB) -lsprng $(CODEC_LIB) 

INCLUDES = $(SYSTEM_INCLUDES) -I$(UNIX) -I$(COMMON) -I$(PROTOLIB)/common -I$(MGEN_COMMON) $(TINCLUDE)


#CFLAGS += -g  -DPROTO_DEBUG -DHAVE_GPS -DUNIX -pedantic -O -fPIC $(SYSTEM_HAVES) $(INCLUDES)
CFLAGS += -g -D_REENTRANT -D_HAVE_PCAP -D_RAPR_JOURNAL -DPROTO_DEBUG -DHAVE_GPS -DUNIX  -Wall -pedantic -Wno-long-long -fPIC $(SYSTEM_HAVES) $(INCLUDES)

LDFLAGS = $(SYSTEM_LDFLAGS)

LIBS = $(SYSTEM_LIBS) -lm $(TLIB) -lpthread -lpcap

TARGETS = rapr

# Rule for C++ .cpp extension
.cpp.o:
	$(CC) -c $(CFLAGS) -o $*.o $*.cpp

.c.o:
	$(CC) -c $(CFLAGS) -o $*.o $*.c


all:    rapr
    
# RAPR depends upon the NRL Protean Group's development library
LIBPROTO = $(PROTOLIB)/unix/libProtokit.a
$(PROTOLIB)/unix/libProtokit.a: 
	cd $(PROTOLIB)/unix; $(MAKE) -f Makefile.$(SYSTEM) libProtokit.a


#	force rebuilds of thirdparty if obviously out of sync...
#
$(SPRNG_LIB)/libsprng.a:  $(SPRNG_INC)/sprng.h
	cd $(SPRNG_DIR); $(MAKE) src

RAPR_SRC = $(COMMON)/rapr.cpp 				\
	   $(COMMON)/behaviorEvent.cpp 			\
	   $(COMMON)/raprNumberGenerator.cpp 	\
	   $(COMMON)/raprLogicTable.cpp 		\
	   $(COMMON)/raprDictionary.cpp 		\
	   $(COMMON)/processor.cpp				\
	   $(COMMON)/threadedProc.cpp			\
	   $(COMMON)/dirac_encoder.cpp			\
	   $(COMMON)/tinyxml.cpp 				\
	   $(COMMON)/tinystr.cpp 				\
	   $(COMMON)/tinyxmlparser.cpp 			\
	   $(COMMON)/tinyxmlerror.cpp 			\
	   $(COMMON)/raprUBIState.cpp 			\
	   $(COMMON)/raprPayload.cpp 			\
  	   $(COMMON)/raprJournaller.cpp
          

RAPR_OBJ     = $(RAPR_SRC:.cpp=.o)
    
RAPR_APP_SRC = $(COMMON)/raprApp.cpp
RAPR_APP_OBJ = $(RAPR_APP_SRC:.cpp=.o) 

MGEN_OBJ = $(MGEN_COMMON)/mgenPattern.o 	\
	   $(MGEN_COMMON)/mgenEvent.o 			\
	   $(MGEN_COMMON)/mgen.o 				\
	   $(MGEN_COMMON)/mgenFlow.o 			\
	   $(MGEN_COMMON)/mgenSequencer.o		\
	   $(MGEN_COMMON)/mgenMsg.o 			\
	   $(MGEN_COMMON)/mgenTransport.o 		\
	   $(MGEN_COMMON)/gpsPub.o 				\
	   $(MGEN_COMMON)/mgenPayload.o         


# rapr depends on mgen objs, go make...
#
$(MGEN_OBJ): %.o: %.cpp
	cd $(MGEN_BUILD); $(MAKE) -f Makefile.$(SYSTEM) 


rapr:   $(RAPR_APP_OBJ) $(RAPR_OBJ) $(LIBPROTO) $(MGEN_OBJ)  $(SPRNG_LIB)/libsprng.a 
	$(CC) $(CFLAGS) -o $@ $(RAPR_APP_OBJ) $(RAPR_OBJ) $(MGEN_OBJ) $(LDFLAGS) $(LIBPROTO) $(LIBS)
     	    

TESTLOGIC_SRC = $(COMMON)/raprNumberGenerator.cpp $(COMMON)/raprLogicTable.cpp $(COMMON)/raprDictionary.cpp
TESTLOGIC_OBJ = $(TESTLOGIC_SRC:.cpp=.o)
TESTLOGIC_APP_SRC = $(COMMON)/testlogic.cpp
TESTLOGIC_APP_OBJ = $(TESTLOGIC_APP_SRC:.cpp=.o) 

testlogic:   $(TESTLOGIC_APP_OBJ) $(TESTLOGIC_OBJ) $(LIBPROTO) 
	$(CC) $(CFLAGS) -o $@ $(TESTLOGIC_APP_OBJ) $(TESTLOGIC_OBJ) $(MGEN_OBJ) $(LDFLAGS) $(LIBS) $(LIBPROTO) 


.PHONY:	ctags etags clean cleanall depends 

clean:	
	rm -f $(COMMON)/*.o  $(UNIX)/rapr 


cleanall: clean	
	cd $(MGEN_BUILD); $(MAKE) -f Makefile.common clean


ctags:
	@echo "Making both etags for entire ../.. tree - mv to common"
	ctags `find ../common ../../mgen/protolib/common/ ../../mgen/common/ \
		-name "*.[ch]" -o -name \*.cpp`  
	mv tags ../common

etags:
	@echo "Making both etags for entire ../.. tree - mv to common"
	etags `find ../common ../../mgen/protolib/common/ ../../mgen/common/ \
		-name "*.[ch]" -o -name \*.cpp`  
	mv TAGS ../common


#   Make depends:  cc uses -M, if gcc, -MM is better
DEPS_ARGS   = -MM


depends:
	cd $(COMMON); $(CC) $(DEPS_ARGS) $(CFLAGS) $(RAPR_SRC) > $(UNIX)/.depends.tmp
	sed -e 's?^\([^ ]\)?$(COMMON)/\1?' $(UNIX)/.depends.tmp > $(UNIX)/.depends
	@rm $(UNIX)/.depends.tmp
	

# instead of mkdep... do make depends to get this file

-include $(UNIX)/.depends

#
#	end.of.file
#
